
run vs start
The difference is that when program calls start() method, a new thread is created and code inside run() is executed in new thread while if you call run() method directly no new thread will be created and code inside run() will execute in the current thread directly.

Another difference between start() and run() in Java thread is that you can not call start() twice. Once started, second start() call will throw IllegalStateException in Java while you can call run() method several times since it's just an ordinary method.


Jezeli chcemy uzywac wielewatkowosc, zawsze trzeba utworzyc klase thread na ktorej wywoalmy metoda start()


Procesor daj kontorole jednemu  watkowi naraz

synchronized values
jesli jakis zasob jest wspoldzielony, i nie jest "thread safety" moze do doporawdzic do problemow np. podczas gdy jeden z watkow zostanie azstopowany a w tym czasie inny watek zmieni ta wartosc tego zasobu

synchronized - jest jak blokada na danym fragmencie kodu

Java Thread Sleep important points

    It always pause the current thread execution.
    The actual time thread sleeps before waking up and start execution depends on system timers and schedulers. For a quiet system, the actual time for sleep is near to the specified sleep time but for a busy system it will be little bit more.
    Thread sleep doesnâ€™t lose any monitors or locks current thread has acquired.
    Any other thread can interrupt the current thread in sleep, in that case InterruptedException is thrown.

How Thread Sleep Works

Thread.sleep() interacts with the thread scheduler to put the current thread in wait state for specified period of time. Once the wait time is over, thread state is changed to runnable state and wait for the CPU for further execution. So the actual time that current thread sleep depends on the thread scheduler that is part of operating system.



Listy oraz Kolekcje
Listy nie sa domyslnie thread safty zeby nie zpowalnial oto dzialania
Vector jest thread safty

Concurrent Collections


producer and consumer part

questionsList.wait() - sprawia ze aktualny watek oczekuje notyfikacji aby byc wywolany, i przekazuje kontrole innemu blokowi kodu
questionsList.notif() - przekazuje informacje ze aktualny watek zakonczykl swoje dzialanie i inny watek moze przejac kontrole